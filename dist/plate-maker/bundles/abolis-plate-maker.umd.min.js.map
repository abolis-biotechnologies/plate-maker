{"version":3,"sources":["ng://@abolis/plate-maker/lib/plate-maker.models.ts","ng://@abolis/plate-maker/lib/plate-maker.component.ts","ng://@abolis/plate-maker/lib/misc/truncate.pipe.ts","ng://@abolis/plate-maker/lib/plate-maker.module.ts"],"names":["Delete","Backspace","PlateMakerComponent","_this","this","disableSelection","selected","EventEmitter","deleted","coordToStr","index","String","fromCharCode","emitSelectedWells","emit","selectedWells","stringifyContents","contents","tooltipContents","length","forEach","c","push","type","value","join","prototype","keyEvent","event","code","KEY_CODE","Component","args","selector","template","Input","Output","HostListener","TruncatePipe","transform","limit","substring","Pipe","name","PlateMakerModule","NgModule","declarations","imports","CommonModule","DragToSelectModule","TooltipModule","exports"],"mappings":"2gBAcEA,OAAS,SACTC,UAAY,aCfdC,EAAA,WAIA,SAAAA,IAAA,IAAAC,EAAAC,KASWA,KAAAC,kBAAmB,EAClBD,KAAAE,SAA0C,IAAIC,EAAAA,aAC9CH,KAAAI,QAAyC,IAAID,EAAAA,aAQvDH,KAAAK,WAAU,SAAIC,GAA0B,MAAA,GAAGC,OAAOC,aAAaF,EAAQ,KAEvEN,KAAAS,kBAAiB,WAAe,OAAAV,EAAKG,SAASQ,KAAKX,EAAKY,gBAExDX,KAAAY,kBAAiB,SAAIC,OACbC,EAAkB,GACxB,OAAsB,EAAlBD,EAASE,QACXF,EAASG,QAAO,SAACC,GAAK,OAAAH,EAAgBI,KAAQD,EAAEE,KAAI,KAAKF,EAAEG,SACpDN,EAAgBO,KAAK,SAEvB,iBAGX,OAnB4CvB,EAAAwB,UAAAC,SAA1C,SAAmDC,GAC7CA,EAAMC,OAASC,EAAS9B,QAAU4B,EAAMC,OAASC,EAAS7B,WAC5DG,KAAKI,QAAQM,KAAKV,KAAKW,oCAf5BgB,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kBACVC,SAAA,iwEAMCC,EAAAA,gCACAA,EAAAA,wBACAC,EAAAA,wBACAA,EAAAA,yBAEAC,EAAAA,aAAYL,KAAA,CAAC,eAAgB,CAAC,cAmBjC9B,EApCA,GCAAoC,EAAA,WAEA,SAAAA,KAUA,OALEA,EAAAZ,UAAAa,UAAA,SAAUf,EAAYgB,GACpB,GAAKhB,EACL,OAAOA,EAAML,OAASqB,EAAQhB,EAAMiB,UAAU,EAAGD,GAAS,MAAQhB,uBAPrEkB,EAAAA,KAAIV,KAAA,CAAC,CACJW,KAAM,eASRL,EAZA,GCAAM,EAAA,WASA,SAAAA,KAaA,2BAbCC,EAAAA,SAAQb,KAAA,CAAC,CACRc,aAAc,CACZ5C,EACAoC,GAEFS,QAAS,CACPC,EAAAA,aACAC,EAAAA,mBACAC,EAAAA,eAEFC,QAAS,CAACjD,OAGZ0C,EAtBA","sourcesContent":["export interface WellInterface {\n  row: number;\n  column: number;\n  bgColor: string;\n  contents: ContentInterface[];\n}\n\nexport interface ContentInterface {\n  type: string;\n  value: string;\n  textColor: string;\n}\n\nexport enum KEY_CODE {\n  Delete = 'Delete',\n  Backspace = 'Backspace'\n}\n","import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\nimport { ContentInterface, KEY_CODE, WellInterface } from './plate-maker.models';\n\n@Component({\n  selector: 'lib-plate-maker',\n  templateUrl: './plate-maker.component.html',\n  styleUrls: ['./plate-maker.component.scss']\n})\nexport class PlateMakerComponent {\n\n  selectedWells: WellInterface[];\n  @Input() wells: WellInterface[][];\n  @Input() disableSelection = false;\n  @Output() selected: EventEmitter<WellInterface[]> = new EventEmitter();\n  @Output() deleted: EventEmitter<WellInterface[]> = new EventEmitter();\n\n  @HostListener('window:keyup', ['$event']) keyEvent(event: KeyboardEvent) {\n    if (event.code === KEY_CODE.Delete || event.code === KEY_CODE.Backspace) {\n      this.deleted.emit(this.selectedWells);\n    }\n  }\n\n  coordToStr = (index: number): string => `${String.fromCharCode(index + 65)}`;\n\n  emitSelectedWells = (): void => this.selected.emit(this.selectedWells);\n\n  stringifyContents = (contents: ContentInterface[]): string => {\n    const tooltipContents = [];\n    if (contents.length > 0) {\n      contents.forEach(c => tooltipContents.push(`${c.type}: ${c.value}`));\n      return tooltipContents.join('<br>');\n    }\n    return 'Well is empty';\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n\n  transform(value: any, limit: number): any {\n    if (!value) { return; }\n    return value.length > limit ? value.substring(0, limit) + '...' : value;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DragToSelectModule } from 'ngx-drag-to-select';\nimport { TooltipModule } from 'ng2-tooltip-directive';\n\nimport { PlateMakerComponent } from './plate-maker.component';\nimport { TruncatePipe } from './misc/truncate.pipe';\n\n@NgModule({\n  declarations: [\n    PlateMakerComponent,\n    TruncatePipe\n  ],\n  imports: [\n    CommonModule,\n    DragToSelectModule,\n    TooltipModule\n  ],\n  exports: [PlateMakerComponent]\n})\nexport class PlateMakerModule {\n}\n"]}