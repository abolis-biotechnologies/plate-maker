stages:
  - build
  - test
  - deploy
  - cleanup

variables:
  DOMAIN: ci.docker.abolis.loc
  APP_REPOSITORY: $DOMAIN/aws/plate-maker
  CYPRESS_REPOSITORY: $DOMAIN/aws/plate-maker-cypress

build-app:
  stage: build
  script:
    - docker build
      -t $APP_REPOSITORY:${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA:0:8}
      -f docker/Dockerfile_app
      --build-arg CI_JOB_ID=$CI_JOB_ID
      --build-arg CI_COMMIT_MESSAGE="$CI_COMMIT_MESSAGE"
      .
    - docker push $APP_REPOSITORY:${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA:0:8}

build-cypress:
  stage: build
  script:
    - docker build
      -t $CYPRESS_REPOSITORY:${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA:0:8}
      -f docker/Dockerfile_cypress
      .
    - docker push $CYPRESS_REPOSITORY:${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA:0:8}

all-specs:
  stage: test
  before_script:
    - docker rm -f plate-maker plate-maker-cypress || true
  script:
    - APP_IMAGE=$APP_REPOSITORY:${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA:0:8}
      CYPRESS_IMAGE=$CYPRESS_REPOSITORY:${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA:0:8}
      SPECS="cypress/integration/*"
      ./.gitlab-run-ci.sh
  retry: 1
  after_script:
    - docker stop plate-maker plate-maker-cypress || true
    - /docker_rmi.py -n docker.abolis.loc/aws/ -r plate-maker,plate-maker-cypress -t ".*-[0-9a-fA-F]{8}" -k 3

package-upload:
  stage: deploy
  script:
    # todo remove 'apk add curl' when the next gitlab-runner version has been deployed (with curl included)
    - apk add curl
    - docker rm plate-maker-tested || true
    - docker run
      --name plate-maker-tested
      $APP_REPOSITORY:${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA:0:8}
      bash -c "ls /data/www/dist"
    - docker cp plate-maker-tested:/data/www/dist ./container-dist
    - mv docker/upload_lib.sh ./upload_lib.sh
    - ./upload_lib.sh container-dist
    - docker rm plate-maker-tested
